FROM node:20.2.0-bullseye-slim AS base
RUN yarn global add pnpm
WORKDIR /app


FROM base AS builder
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat

# Install dependencies based on the preferred package manager
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml packages/dashboard/package.json packages/ui/package.json ./
COPY packages/dashboard/package.json ./packages/dashboard/
COPY packages/ui/package.json ./packages/ui/
RUN pnpm i

COPY . .

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
# ENV NEXT_TELEMETRY_DISABLED 1

RUN pnpm --filter @lagon/dashboard postinstall

ENV NEXTJS_OUTPUT standalone
RUN pnpm --filter @lagon/dashboard build

# Production image, copy all the files and run next
FROM base AS runner

ENV NODE_ENV production
# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/packages/dashboard/public ./public

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/packages/dashboard/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/packages/dashboard/.next/static ./packages/dashboard/.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000

CMD ["node", "packages/dashboard/server.js"]